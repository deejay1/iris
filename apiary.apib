FORMAT: 1A

# iris
IRIS API Notes - manage communication during the failure


## ServiceData [/service_data/{service_id}]
+ Parameters
    + service_id (int) ... ID of the service.

### Retrieve information about specific service from Service Catalogue [GET]
+ Response 200 (application/json)
    + Body
        
            {
                "owners": {
                    "technical": "Jan Kowalski",
                    "business": "Tomasz Czarnecki"
                }
            }

## Communication [/communication/{service_id}]
+ Parameters
    + service_id (int) ... ID of the service.

### Manage new failure [POST]
+ Request (application/json)
    + Body

            {
                "service_id": 123,
                "date": "2015-01-30T13:01:01Z",
                "environment": "prod",
                "metric": "failingmetric"
            }

+ Response 201 (application/json)
    + Body
    
            {
                "detail": "OK"
            }

### Update current failure [PATCH]
+ Request (application/json)
    + Body

            {
                "service_id": 123,
                "metric": "secondfailingmetric"
            }

+ Response 200 (application/json)
    + Body

            {
                "detail": "OK"
            }




## Comment [/communication/{service_id}/comment]
+ Parameters
    + service_id (int) ... ID of the service.

### Send a Comment [POST]
+ Response 201 (application/json)
    + Body

            {
                "detail": "OK"
            }

### Retrieve a Comment [GET]
+ Response 200 (application/json)
    + Body

            {
                "date": "2015-01-30T13:05:06Z",
                "message": "My comment message",
                "author": "Jan Kowalski"
            }